"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

"""A category for runs of a game on speedrun.com."""
type Category {
  """The category's base36 ID from speedrun.com."""
  id: String!

  """The category's name."""
  name: String!

  """The category's slug."""
  slug: String!
}

"""A game on speedrun.com."""
type Game {
  """The game's base36 ID from speedrun.com."""
  id: String!

  """The game's name, in English if possible."""
  name: String!

  """The game's URL slug/abbreviation."""
  slug: String!

  """All of the runs submitted for this game."""
  runs: [Run!]!

  """
  Returns the ordered ranked runs for a run in a category and optionally level.
  """
  leaderboard(category: String!, level: String): [RankedRun!]!
}

"""A level of a game on speedrun.com."""
type Level {
  """The level's base36 ID from speedrun.com."""
  id: String!

  """The level's name."""
  name: String!

  """The level's slug."""
  slug: String!

  """The associated game."""
  game: Game!

  """Returns ordered ranked runs."""
  leaderboard(category: String!): [RankedRun!]!
}

"""Read-write operation root."""
type Mutation {
  """There are no read-write operations. This is a hack."""
  noop: Int!
}

"""Read-only operation root."""
type Query {
  """Get a game."""
  game(slug: String!): Game!

  """Get a user."""
  user(slug: String!): User!
}

type RankedRun {
  """This run's rank, with ties broken by date."""
  rank: Int!

  """
  The time of this run, as measured by this leaderboard's rules, in miliseconds.
  """
  timeMs: Int!

  """Whether this run is tied for this rank."""
  isTied: Boolean!

  """This run's rank, with ties unbroken."""
  tiedRank: Int!

  """The run."""
  run: Run!
}

"""A run of a game on speedrun.com."""
type Run {
  """The run's base36 ID from speedrun.com."""
  id: String!

  """The category associated with this run."""
  category: Category!

  """The level associated with this run, or null."""
  level: Level
}

"""A user of speedrun.com."""
type User {
  """The users's base36 ID from speedrun.com."""
  id: String!

  """The user's URL slug/abbreviation."""
  slug: String!
}
