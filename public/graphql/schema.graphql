schema {
  query: Speedruns
  mutation: Speedruns
}

type Speedruns {
  game(slug: String!): Game @juniper(ownership: "owned", infallible: true)
  user(slug: String!): User @juniper(ownership: "owned", infallible: true)
  run(id: String!): Run @juniper(ownership: "owned", infallible: true)
  node(id: ID!): Node @juniper(ownership: "owned", infallible: true)
}

"""
<https://graphql.org/learn/global-object-identification/>
"""
interface Node {
  id: ID! @juniper(ownership: "owned", infallible: true)
}

type Game implements Node {
  id: ID! @juniper(ownership: "owned", infallible: true)
  srcId: String! @juniper(ownership: "owned", infallible: true)
  name: String! @juniper(ownership: "owned", infallible: true)
  slug: String! @juniper(ownership: "owned", infallible: true)
  runs: [Run!]! @juniper(ownership: "owned", infallible: true)
  levels: [Level!]! @juniper(ownership: "owned", infallible: true)
  categories: [Category!]! @juniper(ownership: "owned", infallible: true)
}

type User {
  id: String! @juniper(ownership: "owned", infallible: true)
  slug: String! @juniper(ownership: "owned", infallible: true)
}

type Category {
  id: String! @juniper(ownership: "owned", infallible: true)
  name: String! @juniper(ownership: "owned", infallible: true)
  slug: String! @juniper(ownership: "owned", infallible: true)
  leaderboard(levelSlug: String): [LeaderboardRun!]!
    @juniper(ownership: "owned", infallible: true)
}

type Level {
  id: String! @juniper(ownership: "owned", infallible: true)
  name: String! @juniper(ownership: "owned", infallible: true)
  slug: String! @juniper(ownership: "owned", infallible: true)
  game: Game! @juniper(ownership: "owned", infallible: true)
  categories: [Category!]! @juniper(ownership: "owned", infallible: true)
  leaderboard(categorySlug: String): [LeaderboardRun!]!
    @juniper(ownership: "owned", infallible: true)
}

type Player {
  name: String! @juniper(ownership: "owned", infallible: true)
  user: User @juniper(ownership: "owned", infallible: true)
  isGuest: Boolean! @juniper(ownership: "owned", infallible: true)
}

type LeaderboardRun {
  rank: Int! @juniper(ownership: "owned", infallible: true)
  timeMs: Int! @juniper(ownership: "owned", infallible: true)
  isTied: Boolean! @juniper(ownership: "owned", infallible: true)
  tiedRank: Int! @juniper(ownership: "owned", infallible: true)
  run: Run! @juniper(ownership: "owned", infallible: true)
}

type Run {
  id: String! @juniper(ownership: "owned", infallible: true)
  game: Game! @juniper(ownership: "owned", infallible: true)
  category: Category! @juniper(ownership: "owned", infallible: true)
  level: Level @juniper(ownership: "owned", infallible: true)
  date: Float @juniper(ownership: "owned", infallible: true)
  players: [Player!]! @juniper(ownership: "owned", infallible: true)
}
